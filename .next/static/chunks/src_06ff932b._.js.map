{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,qKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG1C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,iBAA8B;QAC7B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,mNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;MAZnB;AAeN,qBAAqB,WAAW,GAAG,qKAAA,CAAA,iBAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,mBAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;;;;;;MAZrB;AAeN,uBAAuB,WAAW,GAChC,qKAAA,CAAA,mBAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,6LAAC,qKAAA,CAAA,SAAsB;kBACrB,cAAA,6LAAC,qKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,6LAAC;;;;;8BACD,6LAAC,qKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,6LAAC;;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,qKAAA,CAAA,gBAA6B;8BAC5B,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,6LAAC,qKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,YAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG,qKAAA,CAAA,YAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 704, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 752, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/lib/firebase.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp, FirebaseApp } from \"firebase/app\";\nimport { getAnalytics, FirebaseAnalytics } from \"firebase/analytics\";\nimport { getFirestore, FirebaseFirestore } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nlet analytics: FirebaseAnalytics | undefined;\nlet firebaseApp: FirebaseApp | undefined;\nlet db: FirebaseFirestore | undefined;\n\n// Function to initialize Firebase if configuration is complete\nasync function initializeFirebase() {\n  try {\n    // Ensure all required Firebase config values are present\n    if (\n      !firebaseConfig.apiKey ||\n      !firebaseConfig.authDomain ||\n      !firebaseConfig.projectId ||\n      !firebaseConfig.storageBucket ||\n      !firebaseConfig.messagingSenderId ||\n      !firebaseConfig.appId\n    ) {\n      console.error('Missing Firebase configuration values');\n      return;\n    }\n\n    if (firebaseConfig.apiKey &&\n        firebaseConfig.authDomain &&\n        firebaseConfig.projectId &&\n        firebaseConfig.storageBucket &&\n        firebaseConfig.messagingSenderId &&\n        firebaseConfig.appId) {\n\n      firebaseApp = initializeApp(firebaseConfig);\n      analytics = getAnalytics(firebaseApp);\n      db = getFirestore(firebaseApp);\n      console.log(\"Firebase initialized successfully!\");\n    } else {\n        console.error('Firebase configuration object incomplete.');\n    }\n  } catch (e) {\n    console.error('Failed to initialize Firebase:', e);\n  }\n}\n\n// Call the initializeFirebase function\ninitializeFirebase();\n\nexport { firebaseApp, db };\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;AAQ7C;AAPV;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,eAAe,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mCAAmC;AAChE;AAEA,sBAAsB;AACtB,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,+DAA+D;AAC/D,eAAe;IACb,IAAI;QACF,yDAAyD;QACzD,IACE,CAAC,eAAe,MAAM,IACtB,CAAC,eAAe,UAAU,IAC1B,CAAC,eAAe,SAAS,IACzB,CAAC,eAAe,aAAa,IAC7B,CAAC,eAAe,iBAAiB,IACjC,CAAC,eAAe,KAAK,EACrB;YACA,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,IAAI,eAAe,MAAM,IACrB,eAAe,UAAU,IACzB,eAAe,SAAS,IACxB,eAAe,aAAa,IAC5B,eAAe,iBAAiB,IAChC,eAAe,KAAK,EAAE;YAExB,cAAc,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;YAC5B,YAAY,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE;YACzB,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;YAClB,QAAQ,GAAG,CAAC;QACd,OAAO;YACH,QAAQ,KAAK,CAAC;QAClB;IACF,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,kCAAkC;IAClD;AACF;AAEA,uCAAuC;AACvC","debugId":null}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 866, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/lib/firestore-utils.ts"],"sourcesContent":["import { getFirestore, collection, doc, setDoc, getDoc, getDocs, addDoc, updateDoc, deleteDoc, query, where, Timestamp } from 'firebase/firestore';\nimport { firebaseApp } from './firebase';\n\nconst db = getFirestore(firebaseApp);\n\n// --- User Utilities ---\nexport async function addUser(user: { id: string, email: string, role: string; name?: string }) {\n  await setDoc(doc(db, 'users', user.id), user);\n}\n\nexport async function getUsersByRole(role: string) {\n  const q = query(collection(db, 'users'), where('role', '==', role));\n  const snap = await getDocs(q);\n  return snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n}\n\nexport async function updateUser(userId: string, data: Partial<{ email: string; role: string; name?: string }>) {\n  const ref = doc(db, 'users', userId);\n  await updateDoc(ref, data);\n}\n\nexport async function deleteUser(userId: string) {\n  const ref = doc(db, 'users', userId);\n  await deleteDoc(ref);\n}\n\n// --- Exam Utilities ---\nexport async function addExam(exam: any) {\n  const ref = await addDoc(collection(db, 'exams'), exam);\n  return ref.id;\n}\n\nexport async function updateExam(examId: string, data: Partial<any>) {\n  const ref = doc(db, 'exams', examId);\n  await updateDoc(ref, data);\n}\n\nexport async function getAllExams() {\n  const snap = await getDocs(collection(db, 'exams'));\n  return snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n}\nexport async function addSubExam(mainExamId: string, subExam: any) {\n  // Option 1: sub-exams as subcollection\n  const ref = await addDoc(collection(db, 'exams', mainExamId, 'subExams'), subExam);\n  return ref.id;\n}\n\n// --- Assignment Utilities ---\nexport async function assignWork({\n  examId,\n  subExamId = null,\n  internIds,\n  dueDate,\n  assignedBy,\n  notes = '',\n  bulk = false\n}: {\n  examId: string,\n  subExamId?: string | null,\n  internIds: string[],\n  dueDate: Date,\n  assignedBy: string,\n  notes?: string,\n  bulk?: boolean\n}) {\n  const batch = [];\n  for (const internId of internIds) {\n    const assignment = {\n      examId,\n      subExamId: subExamId || null,\n      internId,\n      assignedBy,\n      dueDate: Timestamp.fromDate(dueDate),\n      status: 'assigned',\n      notes,\n      history: [{ action: 'assigned', actorId: assignedBy, timestamp: Timestamp.now(), details: { notes } }]\n    };\n    batch.push(addDoc(collection(db, 'assignments'), assignment));\n  }\n  return Promise.all(batch);\n}\n\nexport async function updateAssignmentStatus(assignmentId: string, status: string, actorId: string, details: any = {}) {\n  const ref = doc(db, 'assignments', assignmentId);\n  await updateDoc(ref, {\n    status,\n    [`history`]: [...(await getDoc(ref)).data()?.history || [], { action: status, actorId, timestamp: Timestamp.now(), details }]\n  });\n}\n\n// --- Submission Utilities ---\nexport async function submitExamForm({ assignmentId, formData, internNotes }) {\n  const ref = await addDoc(collection(db, 'submissions'), {\n    assignmentId,\n    formData,\n    status: 'submitted',\n    internNotes: internNotes || '',\n    adminNotes: '',\n    history: [{ action: 'submitted', actorId: 'intern', timestamp: Timestamp.now(), details: {} }]\n  });\n  return ref.id;\n}\n\nexport async function updateSubmission({ submissionId, status, actorId, adminNotes }) {\n  const ref = doc(db, 'submissions', submissionId);\n  const snap = await getDoc(ref);\n  const prev = snap.data();\n  await updateDoc(ref, {\n    status,\n    adminNotes: adminNotes ?? prev.adminNotes,\n    history: [...(prev.history || []), { action: status, actorId, timestamp: Timestamp.now(), details: { adminNotes } }]\n  });\n}\n\nexport async function approveSubmission({ submissionId, assignmentId, actorId }) {\n  // Move to finalSubmissions\n  const snap = await getDoc(doc(db, 'submissions', submissionId));\n  const data = snap.data();\n  if (!data) throw new Error('Submission not found');\n  await addDoc(collection(db, 'finalSubmissions'), {\n    ...data,\n    approvedAt: Timestamp.now(),\n    approvedBy: actorId\n  });\n  // Update assignment status\n  await updateAssignmentStatus(assignmentId, 'approved', actorId);\n  // Update submission status\n  await updateSubmission({ submissionId, status: 'approved', actorId, adminNotes: data.adminNotes });\n}\n\n// --- Logging (admin only) ---\nexport async function addLog({ action, actorId, entityType, entityId, details }) {\n  await addDoc(collection(db, 'logs'), {\n    action,\n    actorId,\n    entityType,\n    entityId,\n    details,\n    timestamp: Timestamp.now()\n  });\n}\n\n// --- Restore from logs (admin only) ---\nexport async function restoreFromLog(logId: string) {\n  // Implement restoration logic as needed\n  // Fetch log, determine entity, and restore previous state\n}\n\n// --- Utility: Get assignments for intern ---\nexport async function getAssignmentsForIntern(internId: string = '') {\n  let q;\n  if (internId) {\n    q = query(collection(db, 'assignments'), where('internId', '==', internId));\n  } else {\n    q = query(collection(db, 'assignments'));\n  }\n  const snap = await getDocs(q);\n  return snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n}\n\n// --- Utility: Get submissions for assignment ---\nexport async function getSubmissionsForAssignment(assignmentId: string) {\n  const q = query(collection(db, 'submissions'), where('assignmentId', '==', assignmentId));\n  const snap = await getDocs(q);\n  return snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n}\n\n// --- Utility: Get all logs (admin only) ---\nexport async function getAllLogs() {\n  const snap = await getDocs(collection(db, 'logs'));\n  return snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;;;AAEA,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE,yHAAA,CAAA,cAAW;AAG5B,eAAe,QAAQ,IAAgE;IAC5F,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,SAAS,KAAK,EAAE,GAAG;AAC1C;AAEO,eAAe,eAAe,IAAY;IAC/C,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI,UAAU,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,QAAQ,MAAM;IAC7D,MAAM,OAAO,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;IAC3B,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;YAAE,IAAI,IAAI,EAAE;YAAE,GAAG,IAAI,IAAI,EAAE;QAAC,CAAC;AAC5D;AAEO,eAAe,WAAW,MAAc,EAAE,IAA6D;IAC5G,MAAM,MAAM,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,SAAS;IAC7B,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,KAAK;AACvB;AAEO,eAAe,WAAW,MAAc;IAC7C,MAAM,MAAM,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,SAAS;IAC7B,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE;AAClB;AAGO,eAAe,QAAQ,IAAS;IACrC,MAAM,MAAM,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI,UAAU;IAClD,OAAO,IAAI,EAAE;AACf;AAEO,eAAe,WAAW,MAAc,EAAE,IAAkB;IACjE,MAAM,MAAM,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,SAAS;IAC7B,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,KAAK;AACvB;AAEO,eAAe;IACpB,MAAM,OAAO,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI;IAC1C,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;YAAE,IAAI,IAAI,EAAE;YAAE,GAAG,IAAI,IAAI,EAAE;QAAC,CAAC;AAC5D;AACO,eAAe,WAAW,UAAkB,EAAE,OAAY;IAC/D,uCAAuC;IACvC,MAAM,MAAM,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI,SAAS,YAAY,aAAa;IAC1E,OAAO,IAAI,EAAE;AACf;AAGO,eAAe,WAAW,EAC/B,MAAM,EACN,YAAY,IAAI,EAChB,SAAS,EACT,OAAO,EACP,UAAU,EACV,QAAQ,EAAE,EACV,OAAO,KAAK,EASb;IACC,MAAM,QAAQ,EAAE;IAChB,KAAK,MAAM,YAAY,UAAW;QAChC,MAAM,aAAa;YACjB;YACA,WAAW,aAAa;YACxB;YACA;YACA,SAAS,sKAAA,CAAA,YAAS,CAAC,QAAQ,CAAC;YAC5B,QAAQ;YACR;YACA,SAAS;gBAAC;oBAAE,QAAQ;oBAAY,SAAS;oBAAY,WAAW,sKAAA,CAAA,YAAS,CAAC,GAAG;oBAAI,SAAS;wBAAE;oBAAM;gBAAE;aAAE;QACxG;QACA,MAAM,IAAI,CAAC,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI,gBAAgB;IACnD;IACA,OAAO,QAAQ,GAAG,CAAC;AACrB;AAEO,eAAe,uBAAuB,YAAoB,EAAE,MAAc,EAAE,OAAe,EAAE,UAAe,CAAC,CAAC;IACnH,MAAM,MAAM,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,eAAe;IACnC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,KAAK;QACnB;QACA,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE;eAAI,CAAC,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,IAAI,EAAE,IAAI,IAAI,WAAW,EAAE;YAAE;gBAAE,QAAQ;gBAAQ;gBAAS,WAAW,sKAAA,CAAA,YAAS,CAAC,GAAG;gBAAI;YAAQ;SAAE;IAC/H;AACF;AAGO,eAAe,eAAe,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE;IAC1E,MAAM,MAAM,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI,gBAAgB;QACtD;QACA;QACA,QAAQ;QACR,aAAa,eAAe;QAC5B,YAAY;QACZ,SAAS;YAAC;gBAAE,QAAQ;gBAAa,SAAS;gBAAU,WAAW,sKAAA,CAAA,YAAS,CAAC,GAAG;gBAAI,SAAS,CAAC;YAAE;SAAE;IAChG;IACA,OAAO,IAAI,EAAE;AACf;AAEO,eAAe,iBAAiB,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE;IAClF,MAAM,MAAM,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,eAAe;IACnC,MAAM,OAAO,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;IAC1B,MAAM,OAAO,KAAK,IAAI;IACtB,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,KAAK;QACnB;QACA,YAAY,cAAc,KAAK,UAAU;QACzC,SAAS;eAAK,KAAK,OAAO,IAAI,EAAE;YAAG;gBAAE,QAAQ;gBAAQ;gBAAS,WAAW,sKAAA,CAAA,YAAS,CAAC,GAAG;gBAAI,SAAS;oBAAE;gBAAW;YAAE;SAAE;IACtH;AACF;AAEO,eAAe,kBAAkB,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE;IAC7E,2BAA2B;IAC3B,MAAM,OAAO,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,eAAe;IACjD,MAAM,OAAO,KAAK,IAAI;IACtB,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;IAC3B,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI,qBAAqB;QAC/C,GAAG,IAAI;QACP,YAAY,sKAAA,CAAA,YAAS,CAAC,GAAG;QACzB,YAAY;IACd;IACA,2BAA2B;IAC3B,MAAM,uBAAuB,cAAc,YAAY;IACvD,2BAA2B;IAC3B,MAAM,iBAAiB;QAAE;QAAc,QAAQ;QAAY;QAAS,YAAY,KAAK,UAAU;IAAC;AAClG;AAGO,eAAe,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE;IAC7E,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI,SAAS;QACnC;QACA;QACA;QACA;QACA;QACA,WAAW,sKAAA,CAAA,YAAS,CAAC,GAAG;IAC1B;AACF;AAGO,eAAe,eAAe,KAAa;AAChD,wCAAwC;AACxC,0DAA0D;AAC5D;AAGO,eAAe,wBAAwB,WAAmB,EAAE;IACjE,IAAI;IACJ,IAAI,UAAU;QACZ,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI,gBAAgB,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,YAAY,MAAM;IACnE,OAAO;QACL,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI;IAC3B;IACA,MAAM,OAAO,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;IAC3B,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;YAAE,IAAI,IAAI,EAAE;YAAE,GAAG,IAAI,IAAI,EAAE;QAAC,CAAC;AAC5D;AAGO,eAAe,4BAA4B,YAAoB;IACpE,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI,gBAAgB,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,gBAAgB,MAAM;IAC3E,MAAM,OAAO,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;IAC3B,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;YAAE,IAAI,IAAI,EAAE;YAAE,GAAG,IAAI,IAAI,EAAE;QAAC,CAAC;AAC5D;AAGO,eAAe;IACpB,MAAM,OAAO,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,IAAI;IAC1C,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;YAAE,IAAI,IAAI,EAAE;YAAE,GAAG,IAAI,IAAI,EAAE;QAAC,CAAC;AAC5D","debugId":null}},
    {"offset": {"line": 1081, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/exam-form.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\nimport { format } from \"date-fns\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\nimport { useAuth } from \"@/components/auth/auth-provider\";\nimport { getFirestore, collection, addDoc } from 'firebase/firestore';\nimport { firebaseApp, db } from '@/lib/firebase';\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Exam } from '@/types';\nimport { submitExamForm } from '@/lib/firestore-utils';\n\nconst examSchema = z.object({\n  // Section 1: Main Exam Information\n  main_exam_name: z.string().min(3, { message: \"Main exam name must be at least 3 characters.\" }),\n  exam_code: z.string().min(3, { message: \"Exam code must be at least 3 characters.\" }),\n  conducting_body: z.string().min(3, { message: \"Conducting body must be at least 3 characters.\" }),\n  conducting_body_custom: z.string().optional(),\n  exam_sector: z.string().min(1, { message: \"Please select an exam sector.\" }),\n  exam_sector_custom: z.string().optional(),\n  application_start_date: z.date(),\n  application_end_date: z.date(),\n  website_link: z.string().url({ message: \"Invalid URL.\" }),\n\n  // Section 2: Sub-Exams (Handled dynamically)\n  subExams: z.array(\n    z.object({\n      sub_exam_name: z.string(),\n      short_code: z.string(),\n      gender: z.string(),\n      gender_custom: z.string().optional(),\n      marital_status: z.string(),\n      marital_status_custom: z.string().optional(),\n      pwd_eligible: z.boolean().default(false),\n      eligible_disability_types: z.array(z.string()).optional(),\n      other_disability_specified: z.string().optional(),\n      has_age_limit: z.boolean().default(false),\n      lower_age_limit: z.number().min(10).max(99).optional().nullable(),\n      upper_age_limit: z.number().min(10).max(99).optional().nullable(),\n      reference_date_lower: z.date().optional(),\n      reference_date_upper: z.date().optional(),\n      educationRequirements: z.array(\n        z.object({\n          level: z.string(),\n          level_custom: z.string().optional(),\n          degree: z.string(),\n          specialization: z.string(),\n\t  specialization_custom: z.string().optional(),\n          min_percentage: z.number().nullable(),\n          completion_status: z.enum([\"Completed\", \"Final Year\"]),\n          completion_year: z.string().regex(/^\\d{4}$/, { message: \"Completion year must be a 4-digit number.\" }),\n          subjects_required_12th: z.array(z.string()).optional(),\n        })\n      ),\n      nationality: z.array(z.string()).optional(),\n      nationality_custom: z.string().optional(),\n      domicile: z.array(z.string()).optional(),\n      domicile_custom: z.string().optional(),\n      has_category_relaxation: z.boolean().default(false),\n      categoryRelaxations: z.array(\n        z.object({\n          category_key: z.string(),\n          custom_category_name: z.string().optional(),\n          age_relaxation_years: z.number().min(0).max(10),\n          education_relaxation_percent: z.number().min(0).max(20).nullable(),\n          remarks: z.string().optional(),\n        })\n      ).optional(),\n      exam_subjects: z.array(z.string()).optional(),\n      exam_subjects_custom: z.string().optional(),\n      exam_medium: z.array(z.string()).optional(),\n      exam_medium_custom: z.string().optional(),\n    })\n  ),\n});\n\nconst nationalityOptions = [\n  \"Indian\", \"American\", \"British\", \"Canadian\", \"Australian\",\n  \"German\", \"French\", \"Chinese\", \"Japanese\", \"Russian\",\n  \"Brazilian\", \"Mexican\", \"South African\", \"Egyptian\", \"Other\"\n];\n\nconst domicileOptions = [\n  \"All India\", \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\",\n  \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\",\n  \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\",\n  \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\",\n  \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\",\n  \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\", \"Other\"\n];\n\nconst languageOptions = [\n  \"English\", \"Hindi\", \"Bengali\", \"Telugu\", \"Marathi\", \"Tamil\", \"Urdu\",\n  \"Gujarati\", \"Malayalam\", \"Kannada\", \"Odia\", \"Punjabi\", \"Assamese\",\n  \"Sanskrit\", \"Nepali\", \"French\", \"German\", \"Spanish\", \"Chinese\", \"Japanese\",\n  \"Russian\", \"Arabic\", \"Persian\", \"Portuguese\", \"Italian\", \"Korean\", \"Other\"\n];\n\nconst degreeOptions = [\n  \"B.Tech\", \"B.E\", \"B.Sc\", \"B.A\", \"B.Com\", \"MBBS\", \"BDS\", \"B.Arch\", \"LLB\", \"BBA\", \"BCA\",\n  \"M.Tech\", \"M.E\", \"M.Sc\", \"M.A\", \"M.Com\", \"MS\", \"MBA\", \"MCA\", \"LLM\",\n  \"Ph.D\", \"Diploma\", \"10th\", \"12th\", \"Other\"\n];\n\nconst specializationOptions = [\n  \"Computer Science\", \"Information Technology\", \"Electronics\", \"Mechanical\", \"Civil\",\n  \"Electrical\", \"Chemical\", \"Aerospace\", \"Biotechnology\", \"Mathematics\", \"Physics\",\n  \"Chemistry\", \"Biology\", \"Economics\", \"History\", \"Geography\", \"Political Science\",\n  \"Sociology\", \"Commerce\", \"Accounting\", \"Finance\", \"Marketing\", \"Human Resources\",\n  \"Operations\", \"Systems\", \"Networking\", \"Database\", \"Software Engineering\", \"Data Science\",\n  \"Artificial Intelligence\", \"Machine Learning\", \"Cybersecurity\", \"Web Development\",\n  \"Mobile App Development\", \"Cloud Computing\", \"Big Data\", \"Other\"\n];\n\nconst disabilityOptions = [\n    \"Locomotor Disability\",\n    \"Visual Impairment\",\n    \"Hearing Impairment\",\n    \"Intellectual Disability\",\n    \"Multiple Disabilities\",\n    \"Other\"\n];\n\nconst categoryOptions = [\n    \"SC\", \"ST\", \"OBC\", \"EWS\", \"General\", \"PwD\", \"Other\"\n];\n\n\nexport default function InternDashboard() {\n  const { user } = useAuth();\n  const [subExams, setSubExams] = useState([{\n    sub_exam_name: '',\n    short_code: '',\n    gender: 'All',\n    gender_custom: '',\n    marital_status: 'Unmarried',\n    marital_status_custom: '',\n    pwd_eligible: false,\n    eligible_disability_types: [],\n    other_disability_specified: '',\n    has_age_limit: false,\n    lower_age_limit: null,\n    upper_age_limit: null,\n    reference_date_lower: new Date(),\n    reference_date_upper: new Date(),\n    educationRequirements: [{ level: '', level_custom: '', degree: '', specialization: '', specialization_custom:'', min_percentage: null, completion_status: 'Completed', subjects_required_12th: [] }],\n    nationality: [],\n    nationality_custom: '',\n    domicile: [],\n    domicile_custom:'',\n    has_category_relaxation: false,\n    categoryRelaxations: [],\n    exam_subjects: [],\n    exam_subjects_custom: '',\n    exam_medium: [],\n    exam_medium_custom: '',\n  }]);\n\n  const [db, setDb] = useState<any>(null);\n\n  useEffect(() => {\n    if (firebaseApp) {\n      setDb(getFirestore(firebaseApp));\n    }\n  }, []);\n\n  const form = useForm<z.infer<typeof examSchema>>({\n    resolver: zodResolver(examSchema),\n    defaultValues: {\n      main_exam_name: '',\n      exam_code: '',\n      conducting_body: '',\n      exam_sector: '',\n      application_start_date: new Date(),\n      application_end_date: new Date(),\n      website_link: '',\n      subExams: [{\n        sub_exam_name: '',\n        short_code: '',\n        gender: 'All',\n        gender_custom: '',\n        marital_status: 'Unmarried',\n        marital_status_custom: '',\n        pwd_eligible: false,\n        eligible_disability_types: [],\n        other_disability_specified: '',\n        has_age_limit: false,\n        lower_age_limit: null,\n        upper_age_limit: null,\n        reference_date_lower: new Date(),\n        reference_date_upper: new Date(),\n        educationRequirements: [{ level: '', level_custom: '', degree: '', specialization: '', specialization_custom:'', min_percentage: null, completion_status: 'Completed', subjects_required_12th: [] }],\n        nationality: [],\n        nationality_custom: '',\n        domicile: [],\n        domicile_custom:'',\n        has_category_relaxation: false,\n        categoryRelaxations: [],\n        exam_subjects: [],\n        exam_subjects_custom: '',\n        exam_medium: [],\n        exam_medium_custom: '',\n      }],\n    },\n  });\n\n  const { watch, register, control, handleSubmit, setValue, formState: { errors } } = useForm<z.infer<typeof examSchema>>({\n    resolver: zodResolver(examSchema)\n  });\n\n  const watchHasAgeLimit = form.watch(\"subExams\");\n  const watchHasCategoryRelaxation = form.watch(\"subExams\");\n  const watchConductingBody = watch(\"conducting_body\");\n  const watchExamSector = watch(\"exam_sector\");\n\n  const addSubExam = (copyIndex?: number) => {\n    const base = (typeof copyIndex === 'number' && subExams[copyIndex])\n      ? JSON.parse(JSON.stringify(subExams[copyIndex]))\n      : {\n          sub_exam_name: '',\n          short_code: '',\n          gender: 'All',\n          gender_custom: '',\n          marital_status: 'Unmarried',\n          marital_status_custom: '',\n          pwd_eligible: false,\n          eligible_disability_types: [],\n          other_disability_specified: '',\n          has_age_limit: false,\n          lower_age_limit: null,\n          upper_age_limit: null,\n          reference_date_lower: new Date(),\n          reference_date_upper: new Date(),\n          educationRequirements: [{level: '', level_custom: '', degree: '', specialization: '',specialization_custom:'', min_percentage: null, completion_status: 'Completed', subjects_required_12th: []}],\n          nationality: [],\n          nationality_custom: '',\n          domicile: [],\n          domicile_custom:'',\n          has_category_relaxation: false,\n          categoryRelaxations: [],\n          exam_subjects: [],\n          exam_subjects_custom: '',\n          exam_medium: [],\n          exam_medium_custom: '',\n        };\n    setSubExams([...subExams, base]);\n  };\n\n  const removeSubExam = (index: number) => {\n    const newSubExams = [...subExams];\n    newSubExams.splice(index, 1);\n    setSubExams(newSubExams);\n  };\n\n  const handleSubExamChange = (index: number, field: string, value: any) => {\n    const newSubExams = [...subExams];\n    newSubExams[index][field] = value;\n    setSubExams(newSubExams);\n  };\n\n  const addEducationRequirement = (subExamIndex: number) => {\n    const newSubExams = [...subExams];\n    newSubExams[subExamIndex].educationRequirements = [\n      ...newSubExams[subExamIndex].educationRequirements,\n      { level: '', level_custom: '', degree: '', specialization: '', specialization_custom:'', min_percentage: null, completion_status: 'Completed', subjects_required_12th: [] }\n    ];\n    setSubExams(newSubExams);\n  };\n\n  const removeEducationRequirement = (subExamIndex: number, eduIndex: number) => {\n    const newSubExams = [...subExams];\n    newSubExams[subExamIndex].educationRequirements.splice(eduIndex, 1);\n    setSubExams(newSubExams);\n  };\n\n  const handleEducationRequirementChange = (subExamIndex: number, eduIndex: number, field: string, value: any) => {\n    const newSubExams = [...subExams];\n    newSubExams[subExamIndex].educationRequirements[eduIndex][field] = value;\n    setSubExams(newSubExams);\n  };\n\n  const onSubmit = async (data: z.infer<typeof examSchema>) => {\n    // Convert blank strings to null recursively\n    function blanksToNull(obj: any): any {\n      if (Array.isArray(obj)) return obj.map(blanksToNull);\n      if (obj && typeof obj === 'object') {\n        return Object.fromEntries(\n          Object.entries(obj).map(([k, v]) => [k, blanksToNull(v === '' ? null : v)])\n        );\n      }\n      return obj;\n    }\n    const cleanedData = blanksToNull(data);\n    try {\n      // You need assignmentId and internNotes for submission; adapt as needed\n      const assignmentId = '';\n      const internNotes = '';\n      await submitExamForm({ assignmentId, formData: cleanedData, internNotes });\n      alert('Exam details submitted successfully!');\n    } catch (error) {\n      console.error(\"Error submitting exam form: \", error);\n      alert('Failed to submit exam details.');\n    }\n  };\n\n  const disabilityOptions = [\n    \"Locomotor Disability\",\n    \"Visual Impairment\",\n    \"Hearing Impairment\",\n    \"Intellectual Disability\",\n    \"Multiple Disabilities\",\n    \"Other\"\n  ];\n\n  return (\n    <div className=\"container mx-auto py-10\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Intern Dashboard</CardTitle>\n          <CardDescription>Fill in the exam details.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n              {/* Section 1: Main Exam Information */}\n              <div>\n                <h3 className=\"text-lg font-semibold mb-2\">Main Exam Information</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormField\n                    control={control}\n                    name=\"main_exam_name\"\n                    render={({ field }) => (\n                      <FormItem className=\"w-full\">\n                        <FormLabel>Main Exam Name</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., UPSC Civil Services\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={control}\n                    name=\"exam_code\"\n                    render={({ field }) => (\n                      <FormItem className=\"w-full\">\n                        <FormLabel>Exam Code</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., UPSC_CSE_2025\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={control}\n                    name=\"conducting_body\"\n                    render={({ field }) => (\n                      <FormItem className=\"w-full\">\n                        <FormLabel>Conducting Body</FormLabel>\n                        <Select onValueChange={field.onChange} defaultValue={field.value}>\n                          <FormControl>\n                            <SelectTrigger className=\"w-full\">\n                              <SelectValue placeholder=\"Select Conducting Body\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"UPSC\">UPSC</SelectItem>\n                            <SelectItem value=\"SSC\">SSC</SelectItem>\n                            <SelectItem value=\"IBPS\">IBPS</SelectItem>\n                            <SelectItem value=\"State PSC\">State PSC</SelectItem>\n                            <SelectItem value=\"Other\">Other</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  {watchConductingBody === \"Other\" && (\n                    <FormField\n                      control={control}\n                      name=\"conducting_body_custom\"\n                      render={({ field }) => (\n                        <FormItem className=\"w-full\">\n                          <FormLabel>Custom Conducting Body</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"Enter custom conducting body\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  )}\n                  <FormField\n                    control={control}\n                    name=\"exam_sector\"\n                    render={({ field }) => (\n                      <FormItem className=\"w-full\">\n                        <FormLabel>Exam Sector</FormLabel>\n                        <Select onValueChange={field.onChange} defaultValue={field.value}>\n                          <FormControl>\n                            <SelectTrigger className=\"w-full\">\n                              <SelectValue placeholder=\"Select Exam Sector\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"Defence\">Defence</SelectItem>\n                            <SelectItem value=\"Civil Services\">Civil Services</SelectItem>\n                            <SelectItem value=\"Banking\">Banking</SelectItem>\n                            <SelectItem value=\"Engineering\">Engineering</SelectItem>\n                            <SelectItem value=\"Teaching\">Teaching</SelectItem>\n                            <SelectItem value=\"Medical\">Medical</SelectItem>\n                            <SelectItem value=\"Other\">Other</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  {watchExamSector === \"Other\" && (\n                    <FormField\n                      control={control}\n                      name=\"exam_sector_custom\"\n                      render={({ field }) => (\n                        <FormItem className=\"w-full\">\n                          <FormLabel>Custom Exam Sector</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"Enter custom exam sector\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  )}\n                  <FormField\n                    control={control}\n                    name=\"application_start_date\"\n                    render={({ field }) => (\n                      <FormItem className=\"w-full flex flex-col space-y-3\">\n                        <FormLabel>Application Start Date</FormLabel>\n                        <Popover>\n                          <PopoverTrigger asChild>\n                            <FormControl>\n                              <Button\n                                variant={\"outline\"}\n                                className={cn(\n                                  \"w-full pl-3 text-left font-normal\",\n                                  !field.value && \"text-muted-foreground\"\n                                )}\n                              >\n                                {field.value ? (\n                                  format(field.value, \"PPP\")\n                                ) : (\n                                  <span>Pick a date</span>\n                                )}\n                              </Button>\n                            </FormControl>\n                          </PopoverTrigger>\n                          <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                            <Calendar\n                              mode=\"single\"\n                              selected={field.value}\n                              onSelect={field.onChange}\n                              disabled={(date) =>\n                                date > new Date()\n                              }\n                              initialFocus\n                            />\n                          </PopoverContent>\n                        </Popover>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={control}\n                    name=\"application_end_date\"\n                    render={({ field }) => (\n                      <FormItem className=\"w-full flex flex-col space-y-3\">\n                        <FormLabel>Application End Date</FormLabel>\n                        <Popover>\n                          <PopoverTrigger asChild>\n                            <FormControl>\n                              <Button\n                                variant={\"outline\"}\n                                className={cn(\n                                  \"w-full pl-3 text-left font-normal\",\n                                  !field.value && \"text-muted-foreground\"\n                                )}\n                              >\n                                {field.value ? (\n                                  format(field.value, \"PPP\")\n                                ) : (\n                                  <span>Pick a date</span>\n                                )}\n                              </Button>\n                            </FormControl>\n                          </PopoverTrigger>\n                          <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                            <Calendar\n                              mode=\"single\"\n                              selected={field.value}\n                              onSelect={field.onChange}\n                              disabled={(date) =>\n                                date > new Date()\n                              }\n                              initialFocus\n                            />\n                          </PopoverContent>\n                        </Popover>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={control}\n                    name=\"website_link\"\n                    render={({ field }) => (\n                      <FormItem className=\"w-full\">\n                        <FormLabel>Website Link</FormLabel>\n                        <FormControl>\n                          <Input type=\"url\" placeholder=\"e.g., https://example.com\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n              </div>\n\n              {/* Section 2: Sub-Exams */}\n              <div>\n                <h3 className=\"text-lg font-semibold mb-2\">Sub-Exams</h3>\n                {subExams.map((subExam, index) => (\n                  <div key={index} className=\"border p-4 rounded-md mb-2\">\n                    <div className=\"flex justify-end\">\n                      <Button type=\"button\" variant=\"secondary\" size=\"sm\" onClick={() => addSubExam(index)}>\n                        Copy\n                      </Button>\n                    </div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      {/* Sub Exam Name */}\n                      <div className=\"w-full\">\n                        <Label htmlFor={`sub_exam_name_${index}`}>Sub Exam Name</Label>\n                        <Input\n                          type=\"text\"\n                          id={`sub_exam_name_${index}`}\n                          value={subExam.sub_exam_name ?? \"\"}\n                          onChange={(e) => handleSubExamChange(index, 'sub_exam_name', e.target.value)}\n                          className=\"w-full\"\n                        />\n                      </div>\n\n                      {/* Short Code */}\n                      <div className=\"w-full\">\n                        <Label htmlFor={`short_code_${index}`}>Short Code</Label>\n                        <Input\n                          type=\"text\"\n                          id={`short_code_${index}`}\n                          value={subExam.short_code ?? \"\"}\n                          onChange={(e) => handleSubExamChange(index, 'short_code', e.target.value)}\n                          className=\"w-full\"\n                        />\n                      </div>\n\n                      {/* Gender */}\n                      <div className=\"w-full\">\n                        <Label htmlFor={`gender_${index}`}>Gender</Label>\n                        <Select\n                          id={`gender_${index}`}\n                          value={subExam.gender}\n                          onValueChange={(value) => handleSubExamChange(index, 'gender', value)}\n                        >\n                          <SelectTrigger className=\"w-full\">\n                            <SelectValue placeholder=\"Select Gender\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"All\">All</SelectItem>\n                            <SelectItem value=\"Male\">Male</SelectItem>\n                            <SelectItem value=\"Female\">Female</SelectItem>\n                            <SelectItem value=\"Other\">Other</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        {subExam.gender === \"Other\" && (\n                          <Input\n                            type=\"text\"\n                            placeholder=\"Specify gender\"\n                            value={subExam.gender_custom ?? \"\"}\n                            onChange={(e) => handleSubExamChange(index, \"gender_custom\", e.target.value)}\n                            className=\"w-full mt-2\"\n                          />\n                        )}\n                      </div>\n\n                      {/* Marital Status */}\n                      <div className=\"w-full\">\n                        <Label htmlFor={`marital_status_${index}`}>Marital Status</Label>\n                        <Select\n                          id={`marital_status_${index}`}\n                          value={subExam.marital_status}\n                          onValueChange={(value) => handleSubExamChange(index, 'marital_status', value)}\n                        >\n                          <SelectTrigger className=\"w-full\">\n                            <SelectValue placeholder=\"Select Marital Status\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"Unmarried\">Unmarried</SelectItem>\n                            <SelectItem value=\"Married\">Married</SelectItem>\n                            <SelectItem value=\"Divorced\">Divorced</SelectItem>\n                            <SelectItem value=\"Widowed\">Widowed</SelectItem>\n                            <SelectItem value=\"Other\">Other</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        {subExam.marital_status === \"Other\" && (\n                          <Input\n                            type=\"text\"\n                            placeholder=\"Specify marital status\"\n                            value={subExam.marital_status_custom ?? \"\"}\n                            onChange={(e) => handleSubExamChange(index, \"marital_status_custom\", e.target.value)}\n                            className=\"w-full mt-2\"\n                          />\n                        )}\n                      </div>\n\n                      {/* PWD Eligible */}\n                      <div className=\"w-full\">\n                        <FormField\n                          control={control}\n                          name={`subExams.${index}.pwd_eligible`}\n                          render={({ field }) => (\n                            <FormItem className=\"flex flex-row items-center space-x-3 space-y-0 rounded-md border p-4\">\n                              <FormControl>\n                                <Checkbox\n                                  checked={field.value}\n                                  onCheckedChange={field.onChange}\n                                />\n                              </FormControl>\n                              <div className=\"space-y-0.5\">\n                                <FormLabel>PWD Eligible?</FormLabel>\n                                <FormDescription>\n                                  Enable to specify disability eligibility for this exam.\n                                </FormDescription>\n                              </div>\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n\n                      {watch(`subExams.${index}.pwd_eligible`) && (\n                        <div className=\"w-full\">\n                          <FormField\n                            control={control}\n                            name={`subExams.${index}.eligible_disability_types`}\n                            render={({ field }) => (\n                              <FormItem className=\"w-full\">\n                                <FormLabel>Eligible Disability Types</FormLabel>\n                                <Select\n                                  onValueChange={field.onChange}\n                                  defaultValue={field.value}\n                                  multiple\n                                >\n                                  <FormControl>\n                                    <SelectTrigger className=\"w-full\">\n                                      <SelectValue placeholder=\"Select disabilities\" />\n                                    </SelectTrigger>\n                                  </FormControl>\n                                  <SelectContent>\n                                    {disabilityOptions.map((disability) => (\n                                      <SelectItem key={disability} value={disability}>\n                                        {disability}\n                                      </SelectItem>\n                                    ))}\n                                  </SelectContent>\n                                </Select>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n                          {form.getValues(`subExams.${index}.eligible_disability_types`)?.includes(\"Other\") && (\n                            <FormField\n                              control={control}\n                              name={`subExams.${index}.other_disability_specified`}\n                              render={({ field }) => (\n                                <FormItem className=\"w-full\">\n                                  <FormLabel>Specify Other Disability</FormLabel>\n                                  <FormControl>\n                                    <Input placeholder=\"e.g., Neurological Condition\" {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                          )}\n                        </div>\n                      )}\n\n                      {/* Section 3: Age Criteria */}\n                      <div className=\"w-full\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Age Criteria</h3>\n                        <FormField\n                          control={control}\n                          name={`subExams.${index}.has_age_limit`}\n                          render={({ field }) => (\n                            <FormItem className=\"w-full flex flex-row items-center space-x-3 space-y-0 rounded-md border p-4\">\n                              <FormControl>\n                                <Checkbox\n                                  checked={field.value}\n                                  onCheckedChange={field.onChange}\n                                />\n                              </FormControl>\n                              <div className=\"space-y-0.5\">\n                                <FormLabel>Has Age Limit?</FormLabel>\n                                <FormDescription>\n                                  Enable to specify age limits for this exam.\n                                </FormDescription>\n                              </div>\n                            </FormItem>\n                          )}\n                        />\n\n                        {watch(`subExams.${index}.has_age_limit`) && (\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <FormField\n                              control={control}\n                              name={`subExams.${index}.lower_age_limit`}\n                              render={({ field }) => (\n                                <FormItem className=\"w-full\">\n                                  <FormLabel>Lower Age Limit</FormLabel>\n                                  <FormControl>\n                                    <Input\n                                      type=\"number\"\n                                      placeholder=\"e.g., 21\"\n                                      min={10}\n                                      max={99}\n                                      {...field}\n                                    />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                            <FormField\n                              control={control}\n                              name={`subExams.${index}.upper_age_limit`}\n                              render={({ field }) => (\n                                <FormItem className=\"w-full\">\n                                  <FormLabel>Upper Age Limit</FormLabel>\n                                  <FormControl>\n                                    <Input\n                                      type=\"number\"\n                                      placeholder=\"e.g., 30\"\n                                      min={10}\n                                      max={99}\n                                      {...field}\n                                    />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n\n                            <FormField\n                              control={control}\n                              name={`subExams.${index}.reference_date_lower`}\n                              render={({ field }) => (\n                                <FormItem className=\"w-full flex flex-col space-y-3\">\n                                  <FormLabel>Lower Age Limit Date</FormLabel>\n                                  <Popover>\n                                    <PopoverTrigger asChild>\n                                      <FormControl>\n                                        <Button\n                                          variant={\"outline\"}\n                                          className={cn(\n                                            \"w-full pl-3 text-left font-normal\",\n                                            !field.value && \"text-muted-foreground\"\n                                          )}\n                                        >\n                                          {field.value ? (\n                                            format(field.value, \"PPP\")\n                                          ) : (\n                                            <span>Pick a date</span>\n                                          )}\n                                        </Button>\n                                      </FormControl>\n                                    </PopoverTrigger>\n                                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                                      <Calendar\n                                        mode=\"single\"\n                                        selected={field.value}\n                                        onSelect={field.onChange}\n                                        disabled={(date) =>\n                                          date > new Date()\n                                        }\n                                        initialFocus\n                                      />\n                                    </PopoverContent>\n                                  </Popover>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                            <FormField\n                              control={control}\n                              name={`subExams.${index}.reference_date_upper`}\n                              render={({ field }) => (\n                                <FormItem className=\"w-full flex flex-col space-y-3\">\n                                  <FormLabel>Upper Age Limit Date</FormLabel>\n                                  <Popover>\n                                    <PopoverTrigger asChild>\n                                      <FormControl>\n                                        <Button\n                                          variant={\"outline\"}\n                                          className={cn(\n                                            \"w-full pl-3 text-left font-normal\",\n                                            !field.value && \"text-muted-foreground\"\n                                          )}\n                                        >\n                                          {field.value ? (\n                                            format(field.value, \"PPP\")\n                                          ) : (\n                                            <span>Pick a date</span>\n                                          )}\n                                        </Button>\n                                      </FormControl>\n                                    </PopoverTrigger>\n                                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                                      <Calendar\n                                        mode=\"single\"\n                                        selected={field.value}\n                                        onSelect={field.onChange}\n                                        disabled={(date) =>\n                                          date > new Date()\n                                        }\n                                        initialFocus\n                                      />\n                                    </PopoverContent>\n                                  </Popover>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                          </div>\n                        )}\n                      </div>\n\n                      {/* Section 4: Education Requirements */}\n                      <div className=\"w-full\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Education Requirements</h3>\n                        {subExams[index].educationRequirements.map((requirement, eduIndex) => (\n                          <div key={eduIndex} className=\"border p-4 rounded-md mb-2\">\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                              {/* Level */}\n                              <div className=\"w-full\">\n                                <Label htmlFor={`level_${index}_${eduIndex}`}>Level</Label>\n                                <Select\n                                  id={`level_${index}_${eduIndex}`}\n                                  value={requirement.level ?? \"\"}\n                                  onValueChange={(value) => handleEducationRequirementChange(index, eduIndex, 'level', value)}\n                                >\n                                  <SelectTrigger className=\"w-full\">\n                                    <SelectValue placeholder=\"Select Level\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                    <SelectItem value=\"10th\">10th</SelectItem>\n                                    <SelectItem value=\"12th\">12th</SelectItem>\n                                    <SelectItem value=\"Diploma\">Diploma</SelectItem>\n                                    <SelectItem value=\"Graduation\">Graduation</SelectItem>\n                                    <SelectItem value=\"Post-Graduation\">Post-Graduation</SelectItem>\n                                    <SelectItem value=\"Other\">Other</SelectItem>\n                                  </SelectContent>\n                                </Select>\n                                {requirement.level === \"Other\" && (\n                                  <Input\n                                    type=\"text\"\n                                    placeholder=\"Specify level\"\n                                    value={requirement.level_custom ?? \"\"}\n                                    onChange={(e) => handleEducationRequirementChange(index, eduIndex, \"level_custom\", e.target.value)}\n                                    className=\"w-full mt-2\"\n                                  />\n                                )}\n                              </div>\n\n                              {/* Degree */}\n                              <div className=\"w-full\">\n                                <Label htmlFor={`degree_${index}_${eduIndex}`}>Degree</Label>\n                                <Select\n                                  id={`degree_${index}_${eduIndex}`}\n                                  value={requirement.degree ?? \"\"}\n                                  onValueChange={(value) => handleEducationRequirementChange(index, eduIndex, 'degree', value)}\n                                >\n                                  <SelectTrigger className=\"w-full\">\n                                    <SelectValue placeholder=\"Select Degree\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                    {degreeOptions.map((degree) => (\n                                      <SelectItem key={degree} value={degree}>\n                                        {degree}\n                                      </SelectItem>\n                                    ))}\n                                  </SelectContent>\n                                </Select>\n                              </div>\n\n                              {/* Specialization */}\n                              <div className=\"w-full\">\n                                <Label htmlFor={`specialization_${index}_${eduIndex}`}>Specialization</Label>\n                                <Select\n                                  id={`specialization_${index}_${eduIndex}`}\n                                  value={requirement.specialization ?? \"\"}\n                                  onValueChange={(value) => handleEducationRequirementChange(index, eduIndex, 'specialization', value)}\n                                >\n                                  <SelectTrigger className=\"w-full\">\n                                    <SelectValue placeholder=\"Select Specialization\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                    {specializationOptions.map((specialization) => (\n                                      <SelectItem key={specialization} value={specialization}>\n                                        {specialization}\n                                      </SelectItem>\n                                    ))}\n                                  </SelectContent>\n                                </Select>\n                                {requirement.specialization === \"Other\" && (\n                                  <Input\n                                    type=\"text\"\n                                    placeholder=\"Specify Specialization\"\n                                    value={requirement.specialization_custom ?? \"\"}\n                                    onChange={(e) => handleEducationRequirementChange(index, eduIndex, \"specialization_custom\", e.target.value)}\n                                    className=\"w-full mt-2\"\n                                  />\n                                )}\n                              </div>\n\n                              {/* Min Percentage */}\n                              <div className=\"w-full\">\n                                <Label htmlFor={`min_percentage_${index}_${eduIndex}`}>Min Percentage</Label>\n                                <Input\n                                  type=\"number\"\n                                  id={`min_percentage_${index}_${eduIndex}`}\n                                  value={requirement.min_percentage ?? \"\"}\n                                  onChange={(e) => handleEducationRequirementChange(index, eduIndex, 'min_percentage', e.target.value === '' ? null : Number(e.target.value))}\n                                  placeholder=\"e.g., 60\"\n                                  className=\"w-full\"\n                                />\n                              </div>\n\n                              {/* Completion Status */}\n                              <div className=\"w-full\">\n                                <Label htmlFor={`completion_status_${index}_${eduIndex}`}>Completion Status</Label>\n                                <Select\n                                  id={`completion_status_${index}_${eduIndex}`}\n                                  value={requirement.completion_status ?? \"\"}\n                                  onValueChange={(value) => handleEducationRequirementChange(index, eduIndex, 'completion_status', value)}\n                                >\n                                  <SelectTrigger className=\"w-full\">\n                                    <SelectValue placeholder=\"Select Status\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                    <SelectItem value=\"Completed\">Completed</SelectItem>\n                                    <SelectItem value=\"Final Year\">Final Year</SelectItem>\n                                  </SelectContent>\n                                </Select>\n                              </div>\n\n                              {/* Completion Year */}\n                              <div className=\"w-full\">\n                                <Label htmlFor={`completion_year_${index}_${eduIndex}`}>Completion Year</Label>\n                                <Input\n                                  type=\"text\"\n                                  id={`completion_year_${index}_${eduIndex}`}\n                                  value={requirement.completion_year ?? \"\"}\n                                  onChange={(e) => handleEducationRequirementChange(index, eduIndex, 'completion_year', e.target.value)}\n                                  placeholder=\"e.g., 2023\"\n                                  maxLength={4}\n                                  className=\"w-full\"\n                                />\n                              </div>\n\n                              {/* Subjects Required (12th) - Conditional */}\n                              {requirement.level === \"12th\" && (\n                                <div className=\"w-full\">\n                                  <Label htmlFor={`subjects_required_12th_${index}_${eduIndex}`}>Subjects Required (12th)</Label>\n                                  <Input type=\"text\" placeholder=\"e.g., Mathematics, Physics\" className=\"w-full\" />\n                                </div>\n                              )}\n                            </div>\n                            <Button type=\"button\" variant=\"destructive\" size=\"sm\" onClick={() => removeEducationRequirement(index, eduIndex)}>\n                              Remove\n                            </Button>\n                          </div>\n                        ))}\n                        <Button type=\"button\" size=\"sm\" onClick={() => addEducationRequirement(index)}>\n                          Add Education Requirement\n                        </Button>\n                      </div>\n\n                      {/* Section 5: Nationality and Domicile */}\n                      <div className=\"w-full\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Nationality and Domicile</h3>\n                        <FormField\n                          control={control}\n                          name={`subExams.${index}.nationality`}\n                          render={({ field }) => (\n                            <FormItem className=\"w-full\">\n                              <FormLabel>Nationality</FormLabel>\n                              <Select\n                                onValueChange={field.onChange}\n                                defaultValue={field.value}\n                                multiple\n                              >\n                                <FormControl>\n                                  <SelectTrigger className=\"w-full\">\n                                    <SelectValue placeholder=\"Select nationalities\" />\n                                  </SelectTrigger>\n                                </FormControl>\n                                <SelectContent>\n                                  {nationalityOptions.map((nationality) => (\n                                    <SelectItem key={nationality} value={nationality}>\n                                      {nationality}\n                                    </SelectItem>\n                                  ))}\n                                </SelectContent>\n                              </Select>\n                              {form.getValues(`subExams.${index}.nationality`)?.includes(\"Other\") && (\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Specify nationality\"\n                                  value={subExam.nationality_custom || \"\"}\n                                  onChange={(e) => handleSubExamChange(index, \"nationality_custom\", e.target.value)}\n                                  className=\"w-full mt-2\"\n                                />\n                              )}\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                        <FormField\n                          control={control}\n                          name={`subExams.${index}.domicile`}\n                          render={({ field }) => (\n                            <FormItem className=\"w-full\">\n                              <FormLabel>Domicile</FormLabel>\n                              <Select\n                                onValueChange={field.onChange}\n                                defaultValue={field.value}\n                                multiple\n                              >\n                                <FormControl>\n                                  <SelectTrigger className=\"w-full\">\n                                    <SelectValue placeholder=\"Select domiciles\" />\n                                  </SelectTrigger>\n                                </FormControl>\n                                <SelectContent>\n                                  {domicileOptions.map((domicile) => (\n                                    <SelectItem key={domicile} value={domicile}>\n                                      {domicile}\n                                    </SelectItem>\n                                  ))}\n                                </SelectContent>\n                              </Select>\n                              {form.getValues(`subExams.${index}.domicile`)?.includes(\"Other\") && (\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Specify domicile\"\n                                  value={subExam.domicile_custom || \"\"}\n                                  onChange={(e) => handleSubExamChange(index, \"domicile_custom\", e.target.value)}\n                                  className=\"w-full mt-2\"\n                                />\n                              )}\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n\n                      {/* Section 6: Category-Based Relaxations (Optional) */}\n                      <div className=\"w-full\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Category-Based Relaxations (Optional)</h3>\n                        <FormField\n                          control={control}\n                          name={`subExams.${index}.has_category_relaxation`}\n                          render={({ field }) => (\n                            <FormItem className=\"w-full flex flex-row items-center space-x-3 space-y-0 rounded-md border p-4\">\n                              <FormControl>\n                                <Checkbox\n                                  checked={field.value}\n                                  onCheckedChange={field.onChange}\n                                />\n                              </FormControl>\n                              <div className=\"space-y-0.5\">\n                                <FormLabel>Has Category Relaxation?</FormLabel>\n                                <FormDescription>\n                                  Enable to specify category-based relaxations for this exam.\n                                </FormDescription>\n                              </div>\n                            </FormItem>\n                          )}\n                        />\n\n                        {watch(`subExams.${index}.has_category_relaxation`) && (\n                          <div>\n                            {subExams[index].categoryRelaxations?.map((relaxation, relaxIndex) => (\n                              <div key={relaxIndex} className=\"border p-4 rounded-md mb-2\">\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                  {/* Category */}\n                                  <div className=\"w-full\">\n                                    <Label>Category</Label>\n                                    <Select\n                                      value={relaxation.category_key}\n                                      onValueChange={(value) => {\n                                        const newSubExams = [...subExams];\n                                        newSubExams[index].categoryRelaxations[relaxIndex].category_key = value;\n                                        setSubExams(newSubExams);\n                                      }}\n                                    >\n                                      <SelectTrigger className=\"w-full\">\n                                        <SelectValue placeholder=\"Select Category\" />\n                                      </SelectTrigger>\n                                      <SelectContent>\n                                        {categoryOptions.map((category) => (\n                                          <SelectItem key={category} value={category}>\n                                            {category}\n                                          </SelectItem>\n                                        ))}\n                                      </SelectContent>\n                                    </Select>\n                                    {relaxation.category_key === \"Other\" && (\n                                      <Input\n                                        type=\"text\"\n                                        value={relaxation.custom_category_name ?? \"\"}\n                                        onChange={(e) => {\n                                          const newSubExams = [...subExams];\n                                          newSubExams[index].categoryRelaxations[relaxIndex].custom_category_name = e.target.value;\n                                          setSubExams(newSubExams);\n                                        }}\n                                        placeholder=\"e.g., Central list only\"\n                                        className=\"w-full mt-2\"\n                                      />\n                                    )}\n                                  </div>\n\n                                  {/* Age Relaxation (in years) */}\n                                  <div className=\"w-full\">\n                                    <Label>Age Relaxation (in years)</Label>\n                                    <Input\n                                      type=\"number\"\n                                      value={relaxation.age_relaxation_years ?? \"\"}\n                                      onChange={(e) => {\n                                        const newSubExams = [...subExams];\n                                        const newValue = Math.max(0, Math.min(10, Number(e.target.value))); // Ensure value is between 0 and 10\n                                        newSubExams[index].categoryRelaxations[relaxIndex].age_relaxation_years = newValue;\n                                        setSubExams(newSubExams);\n                                      }}\n                                      placeholder=\"e.g., 3\"\n                                      className=\"w-full\"\n                                    />\n                                  </div>\n\n                                  {/* Education Relaxation (in %) */}\n                                  <div className=\"w-full\">\n                                    <Label>Education Relaxation (in %)</Label>\n                                    <Input\n                                      type=\"number\"\n                                      value={relaxation.education_relaxation_percent ?? \"\"}\n                                      onChange={(e) => {\n                                        const newSubExams = [...subExams];\n                                        const newValue = e.target.value === \"\" ? null : Math.max(0, Math.min(20, Number(e.target.value))); // Ensure value is between 0 and 20 or null\n                                        newSubExams[index].categoryRelaxations[relaxIndex].education_relaxation_percent = newValue;\n                                        setSubExams(newSubExams);\n                                      }}\n                                      placeholder=\"e.g., 5\"\n                                      className=\"w-full\"\n                                    />\n                                  </div>\n\n                                  {/* Remarks */}\n                                  <div className=\"w-full\">\n                                    <Label>Remarks</Label>\n                                    <Input\n                                      type=\"text\"\n                                      value={relaxation.remarks || \"\"}\n                                      onChange={(e) => {\n                                        const newSubExams = [...subExams];\n                                        newSubExams[index].categoryRelaxations[relaxIndex].remarks = e.target.value;\n                                        setSubExams(newSubExams);\n                                      }}\n                                      placeholder=\"e.g., Central list only\"\n                                      className=\"w-full\"\n                                    />\n                                  </div>\n                                </div>\n                                <Button\n                                  type=\"button\"\n                                  variant=\"destructive\"\n                                  size=\"sm\"\n                                  onClick={() => {\n                                    const newSubExams = [...subExams];\n                                    newSubExams[index].categoryRelaxations.splice(relaxIndex, 1);\n                                    setSubExams(newSubExams);\n                                  }}\n                                >\n                                  Remove\n                                </Button>\n                              </div>\n                            ))}\n                            <Button\n                              type=\"button\"\n                              size=\"sm\"\n                              onClick={() => {\n                                const newSubExams = [...subExams];\n                                if (!newSubExams[index].categoryRelaxations) {\n                                  newSubExams[index].categoryRelaxations = [];\n                                }\n                                newSubExams[index].categoryRelaxations.push({\n                                  category_key: \"\",\n                                  age_relaxation_years: 0,\n                                  education_relaxation_percent: null,\n                                  remarks: \"\",\n                                });\n                                setSubExams(newSubExams);\n                              }}\n                            >\n                              Add Category Relaxation\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n\n                      {/* Section 7: Exam Subjects & Medium */}\n                      <div className=\"w-full\">\n                        <h3 className=\"text-lg font-semibold mb-2\">Exam Subjects &amp; Medium</h3>\n                        <FormField\n                          control={control}\n                          name={`subExams.${index}.exam_subjects`}\n                          render={({ field }) => (\n                            <FormItem className=\"w-full\">\n                              <FormLabel>Exam Subjects</FormLabel>\n                              <Select\n                                onValueChange={field.onChange}\n                                defaultValue={field.value}\n                                multiple\n                              >\n                                <FormControl>\n                                  <SelectTrigger className=\"w-full\">\n                                    <SelectValue placeholder=\"Select exam subjects\" />\n                                  </SelectTrigger>\n                                </FormControl>\n                                <SelectContent>\n                                  {languageOptions.map((language) => (\n                                    <SelectItem key={language} value={language}>\n                                      {language}\n                                    </SelectItem>\n                                  ))}\n                                </SelectContent>\n                              </Select>\n                              {form.getValues(`subExams.${index}.exam_subjects`)?.includes(\"Other\") && (\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Specify exam subjects\"\n                                  value={subExam.exam_subjects_custom || \"\"}\n                                  onChange={(e) => handleSubExamChange(index, \"exam_subjects_custom\", e.target.value)}\n                                  className=\"w-full mt-2\"\n                                />\n                              )}\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                        <FormField\n                          control={control}\n                          name={`subExams.${index}.exam_medium`}\n                          render={({ field }) => (\n                            <FormItem className=\"w-full\">\n                              <FormLabel>Exam Medium</FormLabel>\n                              <Select\n                                onValueChange={field.onChange}\n                                defaultValue={field.value}\n                                multiple\n                              >\n                                <FormControl>\n                                  <SelectTrigger className=\"w-full\">\n                                    <SelectValue placeholder=\"Select exam medium\" />\n                                  </SelectTrigger>\n                                </FormControl>\n                                <SelectContent>\n                                  {languageOptions.map((language) => (\n                                    <SelectItem key={language} value={language}>\n                                      {language}\n                                    </SelectItem>\n                                  ))}\n                                </SelectContent>\n                              </Select>\n                              {form.getValues(`subExams.${index}.exam_medium`)?.includes(\"Other\") && (\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Specify exam medium\"\n                                  value={subExam.exam_medium_custom ?? \"\"}\n                                  onChange={(e) => handleSubExamChange(index, \"exam_medium_custom\", e.target.value)}\n                                  className=\"w-full mt-2\"\n                                />\n                              )}\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n                    </div>\n                    <Button type=\"button\" variant=\"destructive\" size=\"sm\" onClick={() => removeSubExam(index)}>\n                      Remove\n                    </Button>\n                  </div>\n                ))}\n                <Button type=\"button\" size=\"sm\" onClick={addSubExam}>\n                  Add Sub Exam\n                </Button>\n              </div>\n\n              <Button type=\"submit\" className=\"w-full\">\n                Submit\n              </Button>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4303, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/app/intern/%5BexamId%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useParams } from 'next/navigation';\nimport ExamForm from '@/components/exam-form';\n\nexport default function ExamAssignmentPage() {\n  const params = useParams();\n  const examId = params.examId;\n  if (!examId) return <div className=\"container mx-auto py-10\">No exam selected.</div>;\n  return <ExamForm examId={examId} />;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,SAAS,OAAO,MAAM;IAC5B,IAAI,CAAC,QAAQ,qBAAO,6LAAC;QAAI,WAAU;kBAA0B;;;;;;IAC7D,qBAAO,6LAAC,qIAAA,CAAA,UAAQ;QAAC,QAAQ;;;;;;AAC3B;GALwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}}]
}