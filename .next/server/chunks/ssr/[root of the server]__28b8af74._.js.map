{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/lib/firebase.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp, FirebaseApp } from \"firebase/app\";\nimport { getAnalytics, FirebaseAnalytics } from \"firebase/analytics\";\nimport { getFirestore, FirebaseFirestore } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nlet analytics: FirebaseAnalytics | undefined;\nlet firebaseApp: FirebaseApp | undefined;\nlet db: FirebaseFirestore | undefined;\n\n// Function to initialize Firebase if configuration is complete\nasync function initializeFirebase() {\n  try {\n    // Ensure all required Firebase config values are present\n    if (\n      !firebaseConfig.apiKey ||\n      !firebaseConfig.authDomain ||\n      !firebaseConfig.projectId ||\n      !firebaseConfig.storageBucket ||\n      !firebaseConfig.messagingSenderId ||\n      !firebaseConfig.appId\n    ) {\n      console.error('Missing Firebase configuration values');\n      return;\n    }\n\n    if (firebaseConfig.apiKey &&\n        firebaseConfig.authDomain &&\n        firebaseConfig.projectId &&\n        firebaseConfig.storageBucket &&\n        firebaseConfig.messagingSenderId &&\n        firebaseConfig.appId) {\n\n      firebaseApp = initializeApp(firebaseConfig);\n      analytics = getAnalytics(firebaseApp);\n      db = getFirestore(firebaseApp);\n      console.log(\"Firebase initialized successfully!\");\n    } else {\n        console.error('Firebase configuration object incomplete.');\n    }\n  } catch (e) {\n    console.error('Failed to initialize Firebase:', e);\n  }\n}\n\n// Call the initializeFirebase function\ninitializeFirebase();\n\nexport { firebaseApp, db };\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;AACvD;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,eAAe,QAAQ,GAAG,CAAC,mCAAmC;AAChE;AAEA,sBAAsB;AACtB,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,+DAA+D;AAC/D,eAAe;IACb,IAAI;QACF,yDAAyD;QACzD,IACE,CAAC,eAAe,MAAM,IACtB,CAAC,eAAe,UAAU,IAC1B,CAAC,eAAe,SAAS,IACzB,CAAC,eAAe,aAAa,IAC7B,CAAC,eAAe,iBAAiB,IACjC,CAAC,eAAe,KAAK,EACrB;YACA,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,IAAI,eAAe,MAAM,IACrB,eAAe,UAAU,IACzB,eAAe,SAAS,IACxB,eAAe,aAAa,IAC5B,eAAe,iBAAiB,IAChC,eAAe,KAAK,EAAE;YAExB,cAAc,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;YAC5B,YAAY,CAAA,GAAA,0KAAA,CAAA,eAAY,AAAD,EAAE;YACzB,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;YAClB,QAAQ,GAAG,CAAC;QACd,OAAO;YACH,QAAQ,KAAK,CAAC;QAClB;IACF,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,kCAAkC;IAClD;AACF;AAEA,uCAAuC;AACvC","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///home/me/InternForm/src/app/intern/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { useAuth } from \"@/components/auth/auth-provider\";\nimport { collection, getDocs, query, where, doc, updateDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport { format } from 'date-fns';\nimport { useRouter } from 'next/navigation';\n\ninterface Assignment {\n  id: string;\n  examId: string;\n  subExamId: string;\n  internId: string;\n  assignedBy: string;\n  dueDate: Date;\n  status: 'pending' | 'in-progress' | 'completed' | 'overdue';\n  notes: {\n    mainExamName: string;\n    subExamName: string;\n    subExamCode: string;\n    formLink?: string;\n  };\n  mainExamName: string;\n  subExamName: string;\n  subExamCode: string;\n  formLink?: string;\n  createdAt: Date;\n  lastUpdated?: Date;\n}\n\nasync function getAssignmentsForIntern(userEmail: string) {\n  try {\n    // First, get the user document to find the intern's ID\n    const usersRef = collection(db, 'users');\n    const userQuery = query(usersRef, where('email', '==', userEmail));\n    const userSnapshot = await getDocs(userQuery);\n    \n    if (userSnapshot.empty) {\n      console.warn('No user found with email:', userEmail);\n      return [];\n    }\n    \n    const userId = userSnapshot.docs[0].id;\n    \n    // Now fetch assignments for this user\n    const assignmentsRef = collection(db, 'assignments');\n    const q = query(assignmentsRef, where('internId', '==', userId));\n    const querySnapshot = await getDocs(q);\n    \n    const assignmentsData = querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n      // Convert Firestore Timestamp to Date if needed\n      dueDate: doc.data().dueDate?.toDate ? doc.data().dueDate.toDate() : doc.data().dueDate,\n    }));\n    \n    console.log('Fetched assignments:', assignmentsData);\n\n    // Parse notes if it's a string\n    return assignmentsData.map((assignment: any) => {\n      let notes = assignment.notes;\n      if (typeof notes === 'string') {\n        try {\n          notes = JSON.parse(notes);\n        } catch (e) {\n          console.warn('Failed to parse notes:', e);\n          notes = {};\n        }\n      } else if (!notes) {\n        notes = {};\n      }\n\n      return {\n        ...assignment,\n        notes,\n        mainExamName: assignment.mainExamName || notes.mainExamName || 'N/A',\n        subExamName: assignment.subExamName || notes.subExamName || 'N/A',\n        subExamCode: assignment.subExamCode || notes.subExamCode || 'N/A',\n        status: assignment.status || 'pending',\n      };\n    });\n  } catch (error) {\n    console.error('Error fetching assignments:', error);\n    return [];\n  }\n}\n\nexport default function InternDashboard() {\n  const { user } = useAuth();\n  const [assignments, setAssignments] = useState<Assignment[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAssignment, setSelectedAssignment] = useState<Assignment | null>(null);\n  const router = useRouter();\n\n  const handleStatusChange = async (assignmentId: string, newStatus: Assignment['status']) => {\n    if (!user?.email) return;\n    \n    try {\n      const assignmentRef = doc(db, 'assignments', assignmentId);\n      await updateDoc(assignmentRef, { \n        status: newStatus,\n        lastUpdated: new Date()\n      });\n      \n      setAssignments(prev => \n        prev.map(a => \n          a.id === assignmentId \n            ? { ...a, status: newStatus, lastUpdated: new Date() } \n            : a\n        )\n      );\n    } catch (error) {\n      console.error('Error updating status:', error);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusClasses = {\n      'pending': 'bg-yellow-100 text-yellow-800',\n      'in-progress': 'bg-blue-100 text-blue-800',\n      'completed': 'bg-green-100 text-green-800',\n      'overdue': 'bg-red-100 text-red-800',\n    };\n    \n    const statusText = status.replace('-', ' ');\n    return (\n      <span className={`px-2 py-1 text-xs font-medium rounded-full ${statusClasses[status as keyof typeof statusClasses] || 'bg-gray-100 text-gray-800'}`}>\n        {statusText}\n      </span>\n    );\n  };\n\n  useEffect(() => {\n    const fetchAssignments = async () => {\n      if (!user) {\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        if (user?.email) {\n          console.log('Fetching assignments for user email:', user.email);\n          const assignmentsData = await getAssignmentsForIntern(user.email);\n          console.log('Assignments data:', assignmentsData);\n          setAssignments(assignmentsData);\n        } else {\n          console.warn('No user email found');\n          setAssignments([]);\n        }\n      } catch (error) {\n        console.error('Error fetching assignments:', error);\n        setAssignments([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchAssignments();\n  }, [user]);\n\n  if (isLoading) {\n    return <div className=\"container mx-auto py-10\">Loading your assignments...</div>;\n  }\n\n  return (\n    <div className=\"container mx-auto py-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">My Assignments</h1>\n          <p className=\"text-muted-foreground\">Manage your assigned exams and tasks</p>\n        </div>\n      </div>\n\n      <div className=\"grid gap-6\">\n        {assignments.length > 0 ? (\n          <Card>\n            <CardHeader>\n              <CardTitle>Current Assignments</CardTitle>\n              <CardDescription>Your active and upcoming tasks</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Exam</TableHead>\n                      <TableHead>Task</TableHead>\n                      <TableHead>Due Date</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Assigned By</TableHead>\n                      <TableHead className=\"text-right\">Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {assignments.map((assignment) => (\n                      <TableRow key={assignment.id}>\n                        <TableCell className=\"font-medium\">\n                          <div className=\"font-medium\">{assignment.mainExamName}</div>\n                          <div className=\"text-xs text-muted-foreground\">{assignment.subExamCode}</div>\n                        </TableCell>\n                        <TableCell>{assignment.subExamName}</TableCell>\n                        <TableCell>\n                          <div className=\"font-medium\">\n                            {assignment.dueDate ? format(assignment.dueDate, 'MMM d, yyyy') : 'No deadline'}\n                          </div>\n                          {assignment.dueDate && (\n                            <div className={`text-xs ${new Date(assignment.dueDate) < new Date() ? 'text-red-500' : 'text-muted-foreground'}`}>\n                              {new Date(assignment.dueDate) < new Date() ? 'Overdue' : 'Due soon'}\n                            </div>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          {getStatusBadge(assignment.status)}\n                        </TableCell>\n                        <TableCell className=\"text-sm\">{assignment.assignedBy}</TableCell>\n                        <TableCell>\n                          <div className=\"flex items-center justify-end space-x-2\">\n                            <select\n                              className=\"text-xs p-1 border rounded\"\n                              value={assignment.status}\n                              onChange={(e) => handleStatusChange(assignment.id, e.target.value as Assignment['status'])}\n                            >\n                              <option value=\"pending\">Pending</option>\n                              <option value=\"in-progress\">In Progress</option>\n                              <option value=\"completed\">Completed</option>\n                            </select>\n                            <div className=\"flex flex-col space-y-2\">\n                              <Button \n                                variant=\"outline\" \n                                size=\"sm\" \n                                onClick={() => router.push(`/intern/${assignment.subExamId}`)}\n                                className=\"w-full\"\n                              >\n                                Fill Exam Form\n                              </Button>\n                              {assignment.formLink && (\n                                <Button \n                                  variant=\"outline\" \n                                  size=\"sm\" \n                                  onClick={() => window.open(assignment.formLink, '_blank')}\n                                  className=\"w-full\"\n                                >\n                                  View Additional Resources\n                                </Button>\n                              )}\n                            </div>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </CardContent>\n          </Card>\n        ) : (\n          <Card>\n            <CardContent className=\"py-10 text-center\">\n              <div className=\"mx-auto flex max-w-[420px] flex-col items-center justify-center text-center\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={60}\n                  height={60}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={1}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"text-muted-foreground\"\n                >\n                  <path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\" />\n                  <polyline points=\"14 2 14 8 20 8\" />\n                  <line x1={16} x2={8} y1={13} y2={13} />\n                  <line x1={16} x2={8} y1={17} y2={17} />\n                  <line x1={10} x2={8} y1={9} y2={9} />\n                </svg>\n                <h3 className=\"mt-4 text-lg font-semibold\">No assignments yet</h3>\n                <p className=\"mb-4 mt-2 text-sm text-muted-foreground\">\n                  You don't have any assignments at this time. Check back later or contact your supervisor.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}